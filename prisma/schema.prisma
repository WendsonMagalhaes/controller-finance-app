generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model categories {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  type         String         @db.VarChar(20)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  transactions transactions[]
}

model settings {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  key        String    @db.VarChar(50)
  value      String?
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id                    Int            @id @default(autoincrement())
  user_id               Int?
  category_id           Int?
  description           String?
  type                  String         @db.VarChar(20)
  subtype               String         @db.VarChar(20)
  amount                Decimal        @db.Decimal(12, 2)
  date                  DateTime       @db.Date
  total_installments    Int?           @default(1)
  installment_number    Int?           @default(1)
  parent_installment_id Int?
  created_at            DateTime?      @default(now()) @db.Timestamp(6)
  categories            categories?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transactions          transactions?  @relation("transactionsTotransactions", fields: [parent_installment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_transactions    transactions[] @relation("transactionsTotransactions")
  users                 users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([category_id], map: "idx_transactions_category")
  @@index([type], map: "idx_transactions_type")
  @@index([user_id, date], map: "idx_transactions_user_date")
}

model users {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(100)
  email         String         @unique @db.VarChar(150)
  password_hash String         @db.VarChar(255)
  created_at    DateTime?      @default(now()) @db.Timestamp(6)
  settings      settings[]
  transactions  transactions[]
}
